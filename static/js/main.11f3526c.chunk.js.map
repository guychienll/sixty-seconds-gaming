{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","answer","operator","multiplicand","Math","floor","random","multiplier","Function","toFixed","state","page","timer","formula","score","startHandler","bind","againHandler","enterHandler","animationHandler","this","setState","intervalID","window","setInterval","now","clearInterval","e","key","target","value","document","querySelector","classList","add","remove","className","getPageComponent","React","Component","StartView","onClick","MainView","type","onKeyUp","onAnimationEnd","RestartView","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11f3526c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    let multiplicand = Math.floor(Math.random() * 10);\n    let multiplier = Math.floor(Math.random() * 10);\n    let answer;\n    let operator;\n    switch (Math.floor(Math.random() * 4 + 1)) {\n      case 1:\n        operator = \"+\";\n        answer = Function(`return ${multiplicand} ${operator} ${multiplier}`)();\n        break;\n      case 2:\n        operator = \"-\";\n        answer = Function(`return ${multiplicand} ${operator} ${multiplier}`)();\n        break;\n      case 3:\n        operator = \"×\";\n        answer = Function(`return ${multiplicand} * ${multiplier}`)();\n        break;\n      case 4:\n        operator = \"÷\";\n        answer = Function(`return ${multiplicand} / ${multiplier}`)().toFixed(\n          2\n        );\n        break;\n      default:\n    }\n\n    this.state = {\n      page: \"page1\",\n      timer: 60,\n      formula: {\n        multiplicand: multiplicand,\n        multiplier: multiplier,\n        operator: operator,\n        answer: answer,\n      },\n      score: 0,\n    };\n\n    this.startHandler = this.startHandler.bind(this);\n    this.againHandler = this.againHandler.bind(this);\n    this.enterHandler = this.enterHandler.bind(this);\n    this.animationHandler = this.animationHandler.bind(this);\n  }\n  startHandler() {\n    this.setState({\n      page: \"page2\",\n    });\n\n    let intervalID = window.setInterval(() => {\n      if (this.state.timer !== 0) {\n        const now = this.state.timer - 1;\n        this.setState({\n          timer: now,\n        });\n      } else {\n        this.setState({\n          page: \"page3\",\n        });\n        window.clearInterval(intervalID);\n      }\n    }, 1000);\n  }\n  againHandler() {\n    this.setState({\n      page: \"page2\",\n      timer: 60,\n      score: 0,\n    });\n    let intervalID = window.setInterval(() => {\n      if (this.state.timer !== 0) {\n        const now = this.state.timer - 1;\n        this.setState({\n          timer: now,\n        });\n      } else {\n        this.setState({\n          page: \"page3\",\n        });\n        window.clearInterval(intervalID);\n      }\n    }, 1000);\n  }\n  enterHandler(e) {\n    if (e.key === \"Enter\") {\n      if (this.state.formula.answer == e.target.value) {\n        document.querySelector(\".answer\").classList.add(\"correct\");\n        if (this.state.timer >= 40) {\n          let multiplicand = Math.floor(Math.random() * 10);\n          let multiplier = Math.floor(Math.random() * 10);\n          let answer;\n          let operator;\n          switch (Math.floor(Math.random() * 4 + 1)) {\n            case 1:\n              operator = \"+\";\n              answer = Function(\n                `return ${multiplicand} ${operator} ${multiplier}`\n              )();\n              break;\n            case 2:\n              operator = \"-\";\n              answer = Function(\n                `return ${multiplicand} ${operator} ${multiplier}`\n              )();\n              break;\n            case 3:\n              operator = \"×\";\n              answer = Function(`return ${multiplicand} * ${multiplier}`)();\n              break;\n            case 4:\n              operator = \"÷\";\n              answer = Function(\n                `return ${multiplicand} / ${multiplier}`\n              )().toFixed(2);\n              break;\n            default:\n          }\n\n          let score = this.state.score;\n          score++;\n          this.setState({\n            formula: {\n              multiplicand: multiplicand,\n              multiplier: multiplier,\n              operator: operator,\n              answer: answer,\n            },\n            score: score,\n          });\n          e.target.value = \"\";\n        } else if (this.state.timer < 40 && this.state.timer >= 20) {\n          let multiplicand = Math.floor(Math.random() * 100);\n          let multiplier = Math.floor(Math.random() * 100);\n          let answer;\n          let operator;\n          switch (Math.floor(Math.random() * 4 + 1)) {\n            case 1:\n              operator = \"+\";\n              answer = Function(\n                `return ${multiplicand} ${operator} ${multiplier}`\n              )();\n              break;\n            case 2:\n              operator = \"-\";\n              answer = Function(\n                `return ${multiplicand} ${operator} ${multiplier}`\n              )();\n              break;\n            case 3:\n              operator = \"×\";\n              answer = Function(`return ${multiplicand} * ${multiplier}`)();\n              break;\n            case 4:\n              operator = \"÷\";\n              answer = Function(\n                `return ${multiplicand} / ${multiplier}`\n              )().toFixed(2);\n              break;\n            default:\n          }\n\n          let score = this.state.score;\n          score++;\n          this.setState({\n            formula: {\n              multiplicand: multiplicand,\n              multiplier: multiplier,\n              operator: operator,\n              answer: answer,\n            },\n            score: score,\n          });\n          e.target.value = \"\";\n        } else {\n          let multiplicand = Math.floor(Math.random() * 1000);\n          let multiplier = Math.floor(Math.random() * 1000);\n          let answer;\n          let operator;\n          switch (Math.floor(Math.random() * 4 + 1)) {\n            case 1:\n              operator = \"+\";\n              answer = Function(\n                `return ${multiplicand} ${operator} ${multiplier}`\n              )();\n              break;\n            case 2:\n              operator = \"-\";\n              answer = Function(\n                `return ${multiplicand} ${operator} ${multiplier}`\n              )();\n              break;\n            case 3:\n              operator = \"×\";\n              answer = Function(`return ${multiplicand} * ${multiplier}`)();\n              break;\n            case 4:\n              operator = \"÷\";\n              answer = Function(\n                `return ${multiplicand} / ${multiplier}`\n              )().toFixed(2);\n              break;\n            default:\n          }\n          let score = this.state.score;\n          score += 5;\n          this.setState({\n            formula: {\n              multiplicand: multiplicand,\n              multiplier: multiplier,\n              operator: operator,\n              answer: answer,\n            },\n            score: score,\n          });\n          e.target.value = \"\";\n        }\n      } else {\n        let score = this.state.score;\n        if (score > 0) {\n          score--;\n        }\n        this.setState({\n          score: score,\n        });\n        document.querySelector(\".answer\").classList.add(\"error\");\n      }\n    }\n  }\n  animationHandler() {\n    document.querySelector(\".answer\").classList.remove(\"error\");\n    document.querySelector(\".answer\").classList.remove(\"correct\");\n  }\n  getPageComponent() {\n    switch (this.state.page) {\n      case \"page1\":\n        return <StartView startHandler={this.startHandler} />;\n      case \"page2\":\n        return (\n          <MainView\n            timer={this.state.timer}\n            enterHandler={this.enterHandler}\n            animationHandler={this.animationHandler}\n            formula={this.state.formula}\n            score={this.state.score}\n          />\n        );\n      case \"page3\":\n        return (\n          <RestartView\n            againHandler={this.againHandler}\n            score={this.state.score}\n          />\n        );\n      default:\n        break;\n    }\n  }\n  render() {\n    return <div className=\"container\">{this.getPageComponent()}</div>;\n  }\n}\n\nclass StartView extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"startBox\">\n        <div className=\"titleBox\">\n          <div className=\"titleNumber\">60</div>\n          <div className=\"titleText\">SECONDS CHALLENGE</div>\n        </div>\n        <div className=\"buttonBox\">\n          <button className=\"start\" onClick={this.props.startHandler}>\n            START!\n          </button>\n          <div className=\"content\">try to answer more as you can</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass MainView extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let timer;\n    if (this.props.timer % 60 === 0) {\n      timer = `0${this.props.timer / 60}:00`;\n    } else if (this.props.timer >= 10) {\n      timer = `00:${this.props.timer}`;\n    } else {\n      timer = `00:0${this.props.timer}`;\n    }\n    let score;\n    if (this.props.score < 10) {\n      score = `00${this.props.score}`;\n    } else if (this.props.score >= 10 && this.props.score < 100) {\n      score = `0${this.props.score}`;\n    } else {\n      score = `${this.props.score}`;\n    }\n\n    return (\n      <div className=\"mainBox\">\n        <div className=\"mainHeader\">\n          <div className=\"mainScoreBox\">\n            <div className=\"mainScoreBoxTitle\">60 SECONDS CHALLENGE</div>\n            <div className=\"mainScoreBoxScore\">{score}</div>\n          </div>\n          <div className=\"timer\">{timer}</div>\n        </div>\n        <div className=\"mainFooter\">\n          <div className=\"formula\">{`${this.props.formula.multiplicand} ${this.props.formula.operator} ${this.props.formula.multiplier} =`}</div>\n          <div className=\"answerBox\">\n            <input\n              type=\"text\"\n              className=\"answer\"\n              onKeyUp={this.props.enterHandler}\n              onAnimationEnd={this.props.animationHandler}\n            />\n            <div className=\"answerContent\">press enter to answer</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RestartView extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"restartBox\">\n        <div className=\"restartHeader\">\n          <div className=\"restartTitle\">60 SECONDS CHALLENGE</div>\n          <div className=\"restartFinalScore\">YOUR FINAL SCORE</div>\n          <div className=\"finalScore\">{this.props.score}</div>\n        </div>\n        <div className=\"restartFooter\">\n          <button className=\"again\" onClick={this.props.againHandler}>\n            TRY AGAIN!\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}